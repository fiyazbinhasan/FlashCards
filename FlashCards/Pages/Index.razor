@page "/"
@page "/decks/{DeckId:guid}"
@page "/decks/{DeckId:guid}/{Action}"

@using Fluxor
@using FlashCards.Store.DecksUseCase

@if (DeckId == Guid.Empty)
{
    <MudAlert Severity="Severity.Info">Start by adding or selecting a deck from the sidebar</MudAlert>
}
else
{
    <VisibleCards DeckId="DeckId" />
}

@if (!string.IsNullOrEmpty(Action))
{
    if (Action.ToLowerInvariant() == "new")
    {
        <AddModal DeckId="DeckId" />
    }
    else if (Action.ToLowerInvariant() == "edit")
    {
        <AddModal DeckId="DeckId" />
    }
}

@code
{
    [Parameter] public Guid DeckId { get; set; }
    [Parameter] public string Action { get; set; }

    [Inject]
    private IDispatcher Dispatcher { get; set; }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        Dispatcher.Dispatch(new SelectDeckAction(DeckId));

        return base.OnAfterRenderAsync(firstRender);
    }
}