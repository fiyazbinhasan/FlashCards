@using FlashCards.Store.CardsUseCase

<div class="modal">
    <div class="modal-content">
        <MudText Typo="Typo.h6">Add Card</MudText>
        <MudTextField Class="mt-8 mb-8" Label="Front" Variant="Variant.Outlined" @bind-Value="@Front" Lines="4" />
        <MudTextField Class="mb-8" Label="Back" Variant="Variant.Outlined" @bind-Value="@Back" Lines="4" />
        <div class="d-flex justify-end">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddCard" Class="px-10 mx-2">Add</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Cancel" Class="px-10 mx-2">Cancel</MudButton>
        </div>
    </div>
</div>

@code {

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Parameter]
    public Guid DeckId { get; set; }

    [Parameter]
    public EventCallback<Card> OnAddCard { get; set; }

    public string Front { get; set; }

    public string Back { get; set; }

    private async Task AddCard()
    {
        await OnAddCard.InvokeAsync(new Card(Guid.NewGuid(), Front, Back, 1, DeckId));
        NavigationManager.NavigateTo($"/decks/{DeckId}");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo($"/decks/{DeckId}");
    }
}