@using Fluxor
@using FlashCards.Store.CardsUseCase
@using FuzzySharp
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<CardsState> _cardsState

@if (!_cardsState.Value.Cards.Any(c => c.DeckId.Equals(DeckId)))
{
    <MudAlert Severity="Severity.Info">You have not added any card for this deck yet</MudAlert>
}

<MudGrid Class="mt-4">
    @{
        bool Filter(Card c) => (Fuzz.PartialRatio(_cardsState.Value.Filter, c.Front) >= 70
                               || Fuzz.PartialRatio(_cardsState.Value.Filter, c.Back) >= 70)
                               || string.IsNullOrEmpty(_cardsState.Value.Filter);

        foreach (var card in _cardsState.Value.Cards.Where(c => c.DeckId.Equals(DeckId) && Filter(c)))
        {
            <MudItem xs="12" sm="6" md="3">
                <CardFrame @key="@card.Id" Card="@card" />
            </MudItem>
        }
    }
</MudGrid>

@code
{
    [Parameter]
    public Guid DeckId { get; set; }
}